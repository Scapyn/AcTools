security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory:
            memory:
                users:
                    pierre:
                        password: $2y$12$vhORx6PucVNd76vaSp93mOSJzaXZZsCpgEMhu.Rl21R64kxkvkN0W
                        roles: 'ROLE_USER'
                    scapyn:
                        password: $2y$12$mDS5CDCNJlsonKz3W5WWsu0cZhvw5XGMSq7RZidrtMA1QpAmUuNdC
                        roles: 'ROLE_ADMIN'
                    admin:
                        password: $2y$12$syADAt1B.c./hTt7QpVruOJbI9A9kJ4slC13Cx.XV.HES6VtSLeP6
                        roles: 'ROLE_ADMIN'
    encoders:
        Symfony\Component\Security\Core\User\User:
            algorithm: bcrypt
            cost: 12
    firewalls:
#        secured_area:
#            logout:
#                path:    /logout
#                target:  /
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: ~
            http_basic: ~

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html
            

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # require ROLE_ADMIN fir /admin*
        - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
